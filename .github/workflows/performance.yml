name: Performance CI

on:
    push:
        branches: [main, develop]
        paths:
            - "src/visual-editor/**"
            - ".github/workflows/performance.yml"
    pull_request:
        branches: [main, develop]
        paths:
            - "src/visual-editor/**"

jobs:
    lighthouse:
        name: Lighthouse CI
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 1

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: src/visual-editor/package-lock.json

            - name: Install dependencies
              working-directory: src/visual-editor
              run: npm ci

            - name: Build application
              working-directory: src/visual-editor
              run: npm run build
              env:
                  NODE_ENV: production

            - name: Run Lighthouse CI
              working-directory: src/visual-editor
              run: |
                  npm install -g @lhci/cli@0.13.x
                  lhci autorun
              env:
                  LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

            - name: Upload Lighthouse results
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: lighthouse-results
                  path: src/visual-editor/.lighthouseci/
                  retention-days: 30

            - name: Comment PR with results
              if: github.event_name == 'pull_request'
              uses: actions/github-script@v7
              with:
                  script: |
                      const fs = require('fs');
                      const path = require('path');

                      // Read Lighthouse results
                      const resultsPath = 'src/visual-editor/.lighthouseci/manifest.json';
                      if (!fs.existsSync(resultsPath)) {
                        console.log('No Lighthouse results found');
                        return;
                      }

                      const manifest = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
                      const results = manifest[0];

                      if (!results || !results.summary) {
                        console.log('No summary data in results');
                        return;
                      }

                      const { summary } = results;

                      // Format comment
                      const comment = `
                      ## üî¶ Lighthouse CI Results

                      | Category | Score |
                      |----------|-------|
                      | üéØ Performance | ${(summary.performance * 100).toFixed(0)}% |
                      | ‚ôø Accessibility | ${(summary.accessibility * 100).toFixed(0)}% |
                      | ‚úÖ Best Practices | ${(summary['best-practices'] * 100).toFixed(0)}% |
                      | üîç SEO | ${(summary.seo * 100).toFixed(0)}% |

                      ### Core Web Vitals
                      - **FCP**: ${summary['first-contentful-paint']}ms
                      - **LCP**: ${summary['largest-contentful-paint']}ms
                      - **TBT**: ${summary['total-blocking-time']}ms
                      - **CLS**: ${summary['cumulative-layout-shift']}

                      [View full report](${results.url})
                      `;

                      // Post comment
                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: comment
                      });

    bundle-analysis:
        name: Bundle Size Analysis
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: src/visual-editor/package-lock.json

            - name: Install dependencies
              working-directory: src/visual-editor
              run: npm ci

            - name: Build and analyze
              working-directory: src/visual-editor
              run: |
                  npm run build
                  npx vite-bundle-visualizer --open false --filename bundle-analysis.html

            - name: Upload bundle analysis
              uses: actions/upload-artifact@v4
              with:
                  name: bundle-analysis
                  path: src/visual-editor/bundle-analysis.html
                  retention-days: 30

            - name: Check bundle size
              working-directory: src/visual-editor
              run: |
                  BUNDLE_SIZE=$(du -sk dist | cut -f1)
                  echo "Bundle size: ${BUNDLE_SIZE}KB"

                  # Fail if bundle is larger than 2MB
                  if [ $BUNDLE_SIZE -gt 2048 ]; then
                    echo "‚ùå Bundle size exceeds 2MB limit!"
                    exit 1
                  fi

                  echo "‚úÖ Bundle size is within limits"
